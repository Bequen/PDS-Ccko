Jazyk C
- vytvořen v 70. letech minulého století Dennisem  Ritchiem
- jedná se o nízkoúrovňový imperativní (procedurální) jazyk
- jazyk C je slabě staticky typovaný jazyk
	- může vést k nevýhodám: (doptat se Martina)
- snaží se srozumitelně reflektovat samotný hardware
	- díky tomu hojně používá pro operační systémy, ovladače a protokoly
- jazyk C umožňuje manuální správu paměti
	- opět nevýhody
- téměř celý UNIX byl napsán v jazyce C - C se na UNIX však nijak neváže

Jazyk C++
- byl poprvé vydán v roce 1985 jako rozšíření jazyka C (rok je všude jinej)
	- od té doby se však značně rozšířil
- jedná se o objektově orientovaný jazyk, který podporuje i procedurální paradigma
	- jedná se tedy o multi paradigmový
	- podporuje tedy zapouzdření, polymorfismus, dedičnost... (tohle C nepodporuje)
- podobná syntaxe jako C
- jazyk C++ je podporuje nízkoúrovňové programování na systémové úrovni, díky čemuž je vhodný pro vývoj operačních systémů (stejně jako C)
- jazyk C++ se však ukázal jako užitečný i ve vývoji desktopových aplikací, videoher a dalších složitých aplikacích


Knihovny

1. POSIX Threads (Pthreads)
- standartní knihovna pro práci s vlákny v jazyce C/C++
- správa vláken, mutexy, podmínkové proměnné

2. C++ threads (std::thread)
- součástí standartní knihovny C++
- opět knihovna pro správu vláken
- vyšší úroveň abstrakce
- při spouštění kódu na více platformách je lepší použít POXIS

3. OpenMP
- open multi procesing
- API, které poskytuje multi platformní paralelní programování na úrvni sdílené paměti
- umožnuje paralelizovat části kodu pomocí pragmatických direktiv (#pragma)
	- je easy pomocí toho paralelizovat smičky
- umožnuje specifikovat, které proměnné jsou sdílené (současné všem vláknům současně) nebo privátní (soukromé pro každé vlákno)
	- pomocí klíčových slov private a shared
- synchronizační primitiva (bariera)
ukázka kodu

4. MPI
- Message Passing Interface
- umožnuje provádět alokaci, komunikaci a synchronizaci mezi procesy, které jsou namapovány na více uzlů
- přesněji se jedná o API založené na zasílání zpráv mezi uzly
- umožnuje spouštět paralelní programy na clusterech více počítačů






